/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV 1
#define SYM 2
#define GAME 3

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  1   |  2   |  3   |  4   |   5   |   6   |  7    |  8   |  9   |   0   | BSPC  | <-- REMOVED
            // |  TAB  |  Q   |  W   |  E   |  R   |   T   |   Y   |  U    |  I   |  O   |   P   |  \    |
            // | SHIFT |  A   |  S   |  D   |  F   |   G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | CTRL  |  Z   |  X   |  C   |  V   |   B   |   N   |  M    |  ,   |  .   |   /   | ENTER |
            // |ADJUST | LCTL | LALT | LGUI | LOWR | ENTER | SPACE |  RAIS | LARW | DARW | UARW  | RARW  |


            bindings = <
                &kp TAB             &kp SQT         &kp COMMA   &kp DOT  &kp P          &kp Y         &kp F           &kp G           &kp C       &kp R         &kp L        &kp FSLH
                &mt LC(LSHFT) CAPS  &kp A           &kp O       &kp E    &kp U          &kp I         &kp D           &kp H           &kp T       &kp N         &kp S        &kp MINUS
                &mt LSHFT LPAR      &mt LCTL SEMI   &kp Q       &kp J    &kp K          &kp X         &kp B           &kp M           &kp W       &kp V         &mt RCTL Z   &mt RSHFT RPAR
                &kp LC(LS(TAB))     &kp GRAVE   &lt SYM ESC     &kp LGUI &mt LALT LBKT  &lt NAV RET   &lt NAV SPACE   &mt RALT RBKT   &kp RGUI    &lt SYM BSLH  &kp BSPC     &kp LC(TAB) 
            >;
        };

        nav_layer {
            // -------------------------------------------------------------------------------------------
            // |  ESC  |  F2  |  F3  |  F4  |  F5  |  F6  |   F7  |  F8   |  F9  | F10  |  F11  |  F12  | <-- REMOVED
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |  *   |  (   |   )   |  DEL  |
            // |       |  F1  |  F2  |  F3  |  F4  |  F5  |   F6  |   _   |  +   |  {   |   }   |   |   |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |   F12 | LS(#) |LS(|) |      |       |       |
            // |       |      |      |      |      |      |       |       | NEXT | Vol- | Vol+ | PLAY   |
            bindings = <
                &kp TILDE   &kp C_MUTE  &kp C_VOL_DN    &kp C_PP   &kp C_VOL_UP &kp PRCNT   &kp LS(N8)  &kp KP_N7  &kp KP_N8   &kp KP_N9     &kp PLUS         &kp DEL
                &kp HOME    &kp LEFT    &kp UP          &kp DOWN   &kp RIGHT    &kp END     &kp FSLH    &kp KP_N4  &kp KP_N5   &kp KP_N6     &kp MINUS        &mt LC(LSHFT) EQUAL
                &trans      &trans      &trans          &trans     &trans       &trans      &kp LS(N5)  &kp KP_N1  &kp KP_N2   &kp KP_N3     &kp RCTL         &trans
                &trans      &trans      &trans          &trans     &trans       &trans      &trans      &kp KP_N0  &kp DOT     &kp RET       &trans           &trans 
            >;
        };

        sym_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  F2  |  F3  |  F4  |  F5  |  F6  |  F7   |  F8   |  F9  | F10  |  F11  |  F12  | <-- REMOVED
            // |   ~   |  1   |  2   |  3   |  4   |  5   |  6    |   7   |  8   |  9   |   0   |  DEL  |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |   -   |  =   |  [   |   ]   |   \   |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |  F12  |   #   |  |   |      |       |       |
            // |       |      |      |      |      |      |       |       |       |      |      |       |
            bindings = <
                &trans  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &trans
                &trans  &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &to GAME    &trans      &trans      &trans      &trans      &trans
                &trans  &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12     &trans      &trans      &trans      &trans
                &trans  &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
            >;
        };

        game_layer {
        //     // ------------------------------------------------------------------------------------------
        //     // |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |
        //     // |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |
        //     // |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |
        //     // |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |
            bindings = <
                &kp TAB     &kp Q   &kp W   &kp E   &kp R       &kp T       &kp Y   &kp U   &kp I       &kp O   &kp P       &none
                &none       &kp A   &kp S   &kp D   &kp F       &kp G       &kp H   &kp J   &kp K       &kp L   &kp SEMI    &none
                &kp LSHFT   &kp Z   &kp C   &kp V   &kp X       &kp B       &kp M   &kp N   &kp COMMA   &kp DOT &kp FSLH    &none
                &kp LCTL    &kp ESC &kp F3  &none   &kp LALT    &kp SPACE   &none   &none   &none       &none   &none       &to BASE
            >;

        };

        // blank_layer {
        //     // ------------------------------------------------------------------------------------------ FOR REFERENCE/
        //     // |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |
        //     // |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |
        //     // |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |
        //     // |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |
        //     bindings = <
        //         &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
        //         &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
        //         &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
        //         &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
        //     >;
        // };

        flock_layer {
            // ----------------------------------------------------------------------------------------------
            // |tog(4) |  F2    |   F3   |   F4   |   F5   |   F6   |  F7  |  F8  |  F9  | F10 | F11 |      | <-- REMOVED
            // |out tog|BT_SEL 0|BT_SEL 1|BT_SEL 2|BT_SEL 3|BT_SEL 4|BT_PRV|BT_NXT|BT_CLR|     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            bindings = <
                &out OUT_TOG &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_PRV &bt BT_NXT &bt BT_CLR &trans  &trans  &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
            >;
        };
    };
};